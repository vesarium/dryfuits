{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _excluded = [\"variant\"];\n\nvar _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _this = this,\n    _jsxFileName = \"/var/www/dryf/front/src/components/Core/Text.js\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { color, space, typography, shadow } from \"styled-system\";\nvar Paragraph = styled.p(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  font-size: 1.0625rem;\\n  letter-spacing: -0.2px;\\n  line-height: 1.71;\\n  \", \";\\n  \", \";\\n  \", \";\\n  \", \";\\n\"])), color, space, typography, shadow);\nvar ParagraphLarge = styled.p(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  font-size: 1.1875rem;\\n  letter-spacing: -0.2px;\\n  line-height: 1.69;\\n  \", \";\\n  \", \";\\n  \", \";\\n  \", \";\\n\"])), color, space, typography, shadow);\nvar ParagraphSmall = styled.p(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  font-size: 0.9375rem;\\n  letter-spacing: -0.1px;\\n  line-height: 1.73;\\n  \", \";\\n  \", \";\\n  \", \";\\n  \", \";\\n\"])), color, space, typography, shadow);\n\nvar Text = function Text(_ref) {\n  var variant = _ref.variant,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var TextRender;\n\n  switch (variant) {\n    case \"sm\":\n      TextRender = ParagraphSmall;\n      break;\n\n    case \"lg\":\n      TextRender = ParagraphLarge;\n      break;\n\n    default:\n      TextRender = Paragraph;\n  }\n\n  return __jsx(TextRender, _extends({\n    color: \"text\"\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }\n  }));\n};\n\n_c = Text;\nexport default Text;\n\nvar _c;\n\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"sources":["/var/www/dryf/front/src/components/Core/Text.js"],"names":["React","styled","color","space","typography","shadow","Paragraph","p","ParagraphLarge","ParagraphSmall","Text","variant","props","TextRender"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,UAAvB,EAAmCC,MAAnC,QAAiD,eAAjD;AAEA,IAAMC,SAAS,GAAGL,MAAM,CAACM,CAAV,sLAIXL,KAJW,EAKXC,KALW,EAMXC,UANW,EAOXC,MAPW,CAAf;AAUA,IAAMG,cAAc,GAAGP,MAAM,CAACM,CAAV,wLAIhBL,KAJgB,EAKhBC,KALgB,EAMhBC,UANgB,EAOhBC,MAPgB,CAApB;AAUA,IAAMI,cAAc,GAAGR,MAAM,CAACM,CAAV,wLAIhBL,KAJgB,EAKhBC,KALgB,EAMhBC,UANgB,EAOhBC,MAPgB,CAApB;;AAUA,IAAMK,IAAI,GAAG,SAAPA,IAAO,OAA2B;AAAA,MAAxBC,OAAwB,QAAxBA,OAAwB;AAAA,MAAZC,KAAY;;AACtC,MAAIC,UAAJ;;AAEA,UAAQF,OAAR;AACE,SAAK,IAAL;AACEE,MAAAA,UAAU,GAAGJ,cAAb;AACA;;AACF,SAAK,IAAL;AACEI,MAAAA,UAAU,GAAGL,cAAb;AACA;;AACF;AACEK,MAAAA,UAAU,GAAGP,SAAb;AARJ;;AAWA,SAAO,MAAC,UAAD;AAAY,IAAA,KAAK,EAAC;AAAlB,KAA6BM,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAfD;;KAAMF,I;AAiBN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { color, space, typography, shadow } from \"styled-system\";\n\nconst Paragraph = styled.p`\n  font-size: 1.0625rem;\n  letter-spacing: -0.2px;\n  line-height: 1.71;\n  ${color};\n  ${space};\n  ${typography};\n  ${shadow};\n`;\n\nconst ParagraphLarge = styled.p`\n  font-size: 1.1875rem;\n  letter-spacing: -0.2px;\n  line-height: 1.69;\n  ${color};\n  ${space};\n  ${typography};\n  ${shadow};\n`;\n\nconst ParagraphSmall = styled.p`\n  font-size: 0.9375rem;\n  letter-spacing: -0.1px;\n  line-height: 1.73;\n  ${color};\n  ${space};\n  ${typography};\n  ${shadow};\n`;\n\nconst Text = ({ variant, ...props }) => {\n  let TextRender;\n\n  switch (variant) {\n    case \"sm\":\n      TextRender = ParagraphSmall;\n      break;\n    case \"lg\":\n      TextRender = ParagraphLarge;\n      break;\n    default:\n      TextRender = Paragraph;\n  }\n\n  return <TextRender color=\"text\" {...props} />;\n};\n\nexport default Text;\n"]},"metadata":{},"sourceType":"module"}