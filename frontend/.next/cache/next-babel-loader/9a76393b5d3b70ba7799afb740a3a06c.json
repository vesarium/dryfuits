{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _excluded = [\"theme\", \"bg\", \"border\", \"accentColor\", \"name\", \"indicator\", \"options\"];\n\nvar _this = this,\n    _jsxFileName = \"/var/www/dryf/front/src/components/Core/Select.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { withTheme } from \"styled-components\";\nimport Select from \"react-select\";\nvar defaultOptions = [{\n  value: \"chocolate\",\n  label: \"Chocolate\"\n}, {\n  value: \"strawberry\",\n  label: \"Strawberry\"\n}, {\n  value: \"vanilla\",\n  label: \"Vanilla\"\n}];\n\nvar getCustomStyles = function getCustomStyles(theme, accentColor, bg, border, indicator) {\n  return {\n    dropdownIndicator: function dropdownIndicator() {\n      return {\n        display: !indicator && \"none\"\n      };\n    },\n    indicatorSeparator: function indicatorSeparator() {},\n    option: function option(provided, state) {\n      return _objectSpread(_objectSpread({}, provided), {}, {\n        color: state.isSelected ? theme.colors[accentColor] : theme.colors.dark,\n        textAlign: \"left\",\n        backgroundColor: bg\n      });\n    },\n    control: function control(provided, state) {\n      return _objectSpread(_objectSpread({}, provided), {}, {\n        border: !border ? \"none\" : state.menuIsOpen || state.isFocused ? \"1px solid \".concat(theme.colors[accentColor], \" !important\") : \"1px solid \".concat(theme.colors.border, \" !important\"),\n        borderRadius: 10,\n        padding: \"0.25rem 1rem\",\n        width: \"100%\",\n        height: \"45px\",\n        outline: \"none\",\n        boxShadow: \"none\",\n        textAlign: \"left\",\n        backgroundColor: bg\n      });\n    }\n  };\n};\n\nvar SelectStyled = function SelectStyled(_ref) {\n  var theme = _ref.theme,\n      _ref$bg = _ref.bg,\n      bg = _ref$bg === void 0 ? \"#fff\" : _ref$bg,\n      _ref$border = _ref.border,\n      border = _ref$border === void 0 ? true : _ref$border,\n      _ref$accentColor = _ref.accentColor,\n      accentColor = _ref$accentColor === void 0 ? \"success\" : _ref$accentColor,\n      _ref$name = _ref.name,\n      name = _ref$name === void 0 ? \"item\" : _ref$name,\n      _ref$indicator = _ref.indicator,\n      indicator = _ref$indicator === void 0 ? true : _ref$indicator,\n      _ref$options = _ref.options,\n      options = _ref$options === void 0 ? defaultOptions : _ref$options,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return __jsx(Select, _extends({\n    styles: getCustomStyles(theme, accentColor, bg, border, indicator),\n    defaultValue: options[1],\n    name: name,\n    options: options,\n    instanceId: \"inId\"\n  }, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }));\n};\n\n_c = SelectStyled;\nexport default _c2 = withTheme(SelectStyled);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SelectStyled\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/var/www/dryf/front/src/components/Core/Select.js"],"names":["React","withTheme","Select","defaultOptions","value","label","getCustomStyles","theme","accentColor","bg","border","indicator","dropdownIndicator","display","indicatorSeparator","option","provided","state","color","isSelected","colors","dark","textAlign","backgroundColor","control","menuIsOpen","isFocused","borderRadius","padding","width","height","outline","boxShadow","SelectStyled","name","options","rest"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withTheme } from \"styled-components\";\n\nimport Select from \"react-select\";\n\nconst defaultOptions = [\n  { value: \"chocolate\", label: \"Chocolate\" },\n  { value: \"strawberry\", label: \"Strawberry\" },\n  { value: \"vanilla\", label: \"Vanilla\" },\n];\n\nconst getCustomStyles = (theme, accentColor, bg, border, indicator) => {\n  return {\n    dropdownIndicator: () => {\n      return {\n        display: !indicator && \"none\",\n      };\n    },\n    indicatorSeparator: () => {},\n    option: (provided, state) => {\n      return {\n        ...provided,\n        color: state.isSelected ? theme.colors[accentColor] : theme.colors.dark,\n        textAlign: \"left\",\n        backgroundColor: bg,\n      };\n    },\n    control: (provided, state) => {\n      return {\n        ...provided,\n        border: !border\n          ? \"none\"\n          : state.menuIsOpen || state.isFocused\n          ? `1px solid ${theme.colors[accentColor]} !important`\n          : `1px solid ${theme.colors.border} !important`,\n        borderRadius: 10,\n        padding: \"0.25rem 1rem\",\n        width: \"100%\",\n        height: \"45px\",\n        outline: \"none\",\n        boxShadow: \"none\",\n        textAlign: \"left\",\n        backgroundColor: bg,\n      };\n    },\n  };\n};\n\nconst SelectStyled = ({\n  theme,\n  bg = \"#fff\",\n  border = true,\n  accentColor = \"success\",\n  name = \"item\",\n  indicator = true,\n  options = defaultOptions,\n  ...rest\n}) => {\n  return (\n    <Select\n      styles={getCustomStyles(theme, accentColor, bg, border, indicator)}\n      defaultValue={options[1]}\n      name={name}\n      options={options}\n      instanceId=\"inId\"\n      {...rest}\n    />\n  );\n};\n\nexport default withTheme(SelectStyled);\n"]},"metadata":{},"sourceType":"module"}