{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from \"react\"; // Hook\n\nexport var useWindowSize = function useWindowSize() {\n  _s();\n\n  var isClient = true;\n  var getSize = useCallback(function () {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined\n    };\n  }, [isClient]);\n\n  var _useState = useState(getSize()),\n      windowSize = _useState[0],\n      setWindowSize = _useState[1];\n\n  useEffect(function () {\n    if (!isClient) {\n      return false;\n    }\n\n    var handleResize = function handleResize() {\n      setWindowSize(getSize);\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n    return function () {\n      return window.removeEventListener(\"resize\", handleResize);\n    };\n  }, [getSize, isClient]);\n  return windowSize;\n};\n\n_s(useWindowSize, \"XyNs5ltNe5g5AxJIvHEa58HLtP4=\");","map":{"version":3,"sources":["/var/www/dryf/front/src/hooks/useWindowSize.js"],"names":["useState","useEffect","useCallback","useWindowSize","isClient","getSize","width","window","innerWidth","undefined","height","innerHeight","windowSize","setWindowSize","handleResize","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD,C,CAEA;;AACA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA;;AACjC,MAAMC,QAAQ,OAAd;AAEA,MAAMC,OAAO,GAAGH,WAAW,CAAC,YAAM;AAChC,WAAO;AACLI,MAAAA,KAAK,EAAEF,QAAQ,GAAGG,MAAM,CAACC,UAAV,GAAuBC,SADjC;AAELC,MAAAA,MAAM,EAAEN,QAAQ,GAAGG,MAAM,CAACI,WAAV,GAAwBF;AAFnC,KAAP;AAID,GAL0B,EAKxB,CAACL,QAAD,CALwB,CAA3B;;AAOA,kBAAoCJ,QAAQ,CAACK,OAAO,EAAR,CAA5C;AAAA,MAAOO,UAAP;AAAA,MAAmBC,aAAnB;;AAEAZ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACG,QAAL,EAAe;AACb,aAAO,KAAP;AACD;;AAED,QAAMU,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBD,MAAAA,aAAa,CAACR,OAAD,CAAb;AACD,KAFD;;AAIAE,IAAAA,MAAM,CAACQ,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,WAAO;AAAA,aAAMP,MAAM,CAACS,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAN;AAAA,KAAP;AACD,GAXQ,EAWN,CAACT,OAAD,EAAUD,QAAV,CAXM,CAAT;AAaA,SAAOQ,UAAP;AACD,CA1BM;;GAAMT,a","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\n\n// Hook\nexport const useWindowSize = () => {\n  const isClient = typeof window === \"object\";\n\n  const getSize = useCallback(() => {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined\n    };\n  }, [isClient]);\n\n  const [windowSize, setWindowSize] = useState(getSize());\n\n  useEffect(() => {\n    if (!isClient) {\n      return false;\n    }\n\n    const handleResize = () => {\n      setWindowSize(getSize);\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [getSize, isClient]);\n\n  return windowSize;\n};\n"]},"metadata":{},"sourceType":"module"}