import * as cookie from "../cookie";
import { InternalOptions } from "src/lib/types";
/**
 * Returns `code_challenge` and `code_challenge_method`
 * and saves them in a cookie.
 * @type {import("src/lib/types").InternalOptions}
 * @returns {Promise<undefined | {
 *  code_challenge: string
 *  code_challenge_method: "S256"
 *  cookie: import("../cookie").Cookie
 * }>
 */
export declare function createPKCE(options: any): Promise<{
    cookie: {
        name: any;
        value: string;
        options: any;
    };
    code_challenge: string;
    code_challenge_method: string;
} | undefined>;
/**
 * Returns code_verifier if provider uses PKCE,
 * and clears the cookie afterwards.
 */
export declare function usePKCECodeVerifier(params: {
    options: InternalOptions<"oauth">;
    codeVerifier?: string;
}): Promise<{
    codeVerifier?: string;
    cookie?: cookie.Cookie;
} | undefined>;
